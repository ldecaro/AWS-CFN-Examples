AWSTemplateFormatVersion: '2010-09-09'

Description: 'Create Packer AMI builder'
Parameters:

  VPC:
    Type: 'AWS::EC2::VPC::Id'
    Description: 'VPC to use for instance'

  Subnet:
    Type: 'AWS::EC2::Subnet::Id'
    Description: 'Subnet to use for instance'

  AdminAccessCidr:
    Type: 'String'
    Description: 'IP range to allow SSH access'
    Default: '0.0.0.0/0'
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([1-2][0-9]|[0-9]|3[0-2]))$"
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/n



  InstanceName:
    Description: 'Instance Name'
    Type: 'String'
    Default: 'Packer Builder'

  InstanceType:
    Description: 'EC2 instance type'
    Type: 'String'
    Default: 't2.small'
    AllowedValues:
      - "t2.small"
      - "t2.medium"
      - "t2.large"
      - "t3.small"
      - "t3.medium"
      - "t3.large"

  InstanceImage:
    Description: 'Image ID'
    Type: 'String'
    Default: 'ami-9887c6e7'

  Keypair:
    Type: 'AWS::EC2::KeyPair::KeyName'
    Description: 'Keypair to use for instance'

  PackerVersion:
    Description: 'Packer version to install'
    Type: 'String'
    Default: '1.3.3'

Resources:

  PackerSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub '${AWS::StackName} Admin Access'
      VpcId: !Ref VPC
      SecurityGroupIngress:
      - FromPort: 22
        ToPort: 22
        IpProtocol: tcp
        CidrIp: !Ref AdminAccessCidr

  PackerInstance:
    Type: 'AWS::EC2::Instance'
    Metadata:
      AWS::CloudFormation::Init:
        configSets:
          default:
            - cfn_install
            - config
        cfn_install:
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
                interval=1
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Sub |
                [cfn-auto-reloader-hook]
                triggers=post.update
                path=Resources.Server.Metadata.AWS::CloudFormation::Init
                action=/opt/aws/bin/cfn-init -v --stack ${AWS::StackId} --region ${AWS::Region} --resource PackerInstance
                runas=root
            /lib/systemd/system/cfn-hup.service:
              content: |
                [Unit]
                Description=cfn-hup daemon
                [Service]
                Type=simple
                ExecStart=/opt/aws/bin/cfn-hup
                Restart=always
                [Install]
                WantedBy=multi-user.target
          commands:
            # This doesn't work via the sysvinit functionality for some reason
            0_config_cfn_hup:
              command: |
                systemctl enable cfn-hup
                systemctl start cfn-hup
        config:
          packages:
            yum:
              awscli: []
              git: []
              unzip: []
          files:
            /usr/src/packer.zip:
              source: !Sub 'https://releases.hashicorp.com/packer/${PackerVersion}/packer_${PackerVersion}_linux_amd64.zip'
            /etc/profile.d/packer.sh:
              content: !Sub |
                export PATH=/opt/packer:$PATH
          commands:
            01_install_packer:
              command: |
                mkdir /opt/packer
                unzip -d /opt/packer /usr/src/packer.zip
    Properties:
      ImageId: !Ref InstanceImage
      InstanceType: !Ref InstanceType
      SecurityGroupIds:
      - !Ref PackerSecurityGroup
      KeyName: !Ref Keypair
      DisableApiTermination: 'false'
      InstanceInitiatedShutdownBehavior: 'stop'
      IamInstanceProfile: !Ref PackerInstanceProfile
      Monitoring: 'true'
      Tags:
      - Key: 'Name'
        Value: !Ref InstanceName
      SubnetId: !Ref Subnet
      UserData:
        'Fn::Base64': !Sub |
            #!/bin/bash -xe

            curl --silent https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz -o /usr/src/aws-cfn-bootstrap-latest.tar.gz
            easy_install --script-dir /opt/aws/bin /usr/src/aws-cfn-bootstrap-latest.tar.gz

            /opt/aws/bin/cfn-init --stack ${AWS::StackId} --resource PackerInstance --region ${AWS::Region}
            /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource PackerInstance --region ${AWS::Region}

  PackerInstanceRole:
    Type: 'AWS::IAM::Role'
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Effect: 'Allow'
          Principal:
            Service: 'ec2.amazonaws.com'
          Action: 'sts:AssumeRole'
      Path: '/'
      Policies:
      - PolicyName: PackerAccess
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - 'ec2:AttachVolume'
            - 'ec2:AuthorizeSecurityGroupIngress'
            - 'ec2:CopyImage'
            - 'ec2:CreateImage'
            - 'ec2:CreateKeypair'
            - 'ec2:CreateSecurityGroup'
            - 'ec2:CreateSnapshot'
            - 'ec2:CreateTags'
            - 'ec2:CreateVolume'
            - 'ec2:DeleteKeyPair'
            - 'ec2:DeleteSecurityGroup'
            - 'ec2:DeleteSnapshot'
            - 'ec2:DeleteVolume'
            - 'ec2:DeregisterImage'
            - 'ec2:DescribeImageAttribute'
            - 'ec2:DescribeImages'
            - 'ec2:DescribeInstances'
            - 'ec2:DescribeRegions'
            - 'ec2:DescribeSecurityGroups'
            - 'ec2:DescribeSnapshots'
            - 'ec2:DescribeSubnets'
            - 'ec2:DescribeTags'
            - 'ec2:DescribeVolumes'
            - 'ec2:DetachVolume'
            - 'ec2:GetPasswordData'
            - 'ec2:ModifyImageAttribute'
            - 'ec2:ModifyInstanceAttribute'
            - 'ec2:ModifySnapshotAttribute'
            - 'ec2:RegisterImage'
            - 'ec2:RunInstances'
            - 'ec2:StopInstances'
            - 'ec2:TerminateInstances'
            Resource:
            - '*'

  PackerInstanceProfile:
    Type: 'AWS::IAM::InstanceProfile'
    Properties:
      Path: '/'
      Roles:
      - !Ref PackerInstanceRole

Outputs:
  InstanceIp:
    Description: 'Internal IP for Packer Server'
    Value: !GetAtt PackerInstance.PrivateIp

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
          - Label:
              default: "Network Configuration"
            Parameters:
              - VPC
              - Subnet
              - AdminAccessCidr
          - Label:
              default: "EC2 Instance Configuration"
            Parameters:
              - InstanceName
              - InstanceType
              - InstanceImage
              - Keypair
          - Label:
              default: "Packer Configuration"
            Parameters:
              - PackerVersion
    ParameterLabels:
      VPC:
        default: "Select VPC for Packer instance"
      Subnet:
        default: "Select Subnet for Packer instance"
      AdminAccessCidr:
        default: "Specify the cidr block that should have SSH access to the instance"
      InstanceName:
        default: "Instance name (for Name tag)"
      InstanceType:
        default: "Instance Type"
      InstanceImage:
        default: "Instance Image (AMI)"
      Keypair:
        default: "Keypair for SSH access"
      PackerVersion:
        default: "Version of Packer to install"
